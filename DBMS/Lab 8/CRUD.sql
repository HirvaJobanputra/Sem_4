--**From the above given tables perform the following queries:**

--**Part - A**

--1. Both tables Insert, Update and Delete.
--INSERT
	CREATE PROCEDURE PR_STUDENT_INSERT
		@NAME VARCHAR(50),
		@BRANCH VARCHAR(50)
	AS
	INSERT INTO STUDENT(NAME, BRANCH)
	VALUES (@NAME, @BRANCH)

	EXEC PR_STUDENT_INSERT 'VANSHIKA', 'EC'
--UPDATE
	CREATE PROCEDURE PR_STUDENT_UPDATE
		@RNO INT,
		@NAME VARCHAR(50),
		@BRANCH VARCHAR(50)
	AS
	UPDATE Student
	SET NAME=@NAME,BRANCH=@BRANCH
	WHERE RNO=@RNO

	EXEC PR_STUDENT_UPDATE 101,'HIRVA','CE'
--DELETE
	CREATE PROCEDURE PR_STUDENT_DELETE
		@RNO INT
	AS
	DELETE FROM STUDENT 
	WHERE RNO=@RNO

	EXEC PR_STUDENT_DELETE 207

--2. Both tables SelectPK.
	
	CREATE PROCEDURE SELECT_STUDENT_BY_PK
		@RNO INT
	AS 
	SELECT NAME,BRANCH FROM STUDENT
	WHERE RNO=@RNO

	EXEC SELECT_STUDENT_BY_PK 101

--3. Both tables SelectAll.

	CREATE PROCEDURE SELECT_ALL
	AS
	SELECT * FROM STUDENT
	INNER JOIN RESULT
	ON STUDENT.RNO=RESULT.RNO

	EXEC SELECT_ALL

	--**Part - B**

--4. Create a stored procedure that takes branch as input and returns a table with all the students studying in that department.

	CREATE PROCEDURE SELECT_FROM_DEPARTMENT
		@DEPT VARCHAR(50)
	AS
	SELECT * FROM STUDENT
	INNER JOIN RESULT
	ON STUDENT.RNO=RESULT.RNO
	WHERE BRANCH=@DEPT

	EXEC SELECT_FROM_DEPARTMENT 'EC'


--5. Create a stored procedure to display Rno, Name and SPI of first 2 students only.
	
	CREATE PROCEDURE SELECT_TOP_2
	AS
	SELECT TOP 2 * FROM STUDENT 
	INNER JOIN RESULT
	ON STUDENT.RNO = RESULT.RNO

	EXEC SELECT_TOP_2
	
	--**Part - C**

--6. Create a stored procedure which displays top 5 students based on SPI in descending order.
	CREATE PROCEDURE SELECT_TOP_5
	AS
	SELECT TOP 5 * FROM STUDENT 
	INNER JOIN RESULT
	ON STUDENT.RNO = RESULT.RNO
	ORDER BY SPI DESC

	EXEC SELECT_TOP_5
	
--7. Create a stored procedure which displays branch wise maximum and minimum SPI.

	CREATE PROCEDURE MAX_MIN_SPI
	AS
	SELECT BRANCH AS BRANCH, MAX(SPI) AS MAXIMUM, MIN(SPI) AS MINIMUM FROM STUDENT
	INNER JOIN RESULT
	ON Student.RNO = Result.RNO
	GROUP BY BRANCH

	EXEC MAX_MIN_SPI 


	SELECT RNO, 
	CONCAT(UPPER(LEFT(NAME,1)),LOWER(SUBSTRING(NAME,2,LEN(NAME)))) AS 'NAME' FROM STUDENT ORDER BY RNO

